Socks5d Proxy Monitoring And Configuration Protocol

Acknowledgments

    This memo describes a protocol that was designed for the University Subject 'Protocolos de Comunicaci√≥n'.  The key contributors are:
    Marcos Dedeu, Gonzalo Beade, Santiago Hadad and Salvador Castagnino. 

1.Terminology

The keywords MUST, MUST NOT, SHOULD, SHOULD NOT, MAY in this document will be interpreted as described in RFC 2119.
 
2. Introduction

    The goal of this protocol is to provide an interface for interacting with a running Socks5d Server. The client MAY ask for:
        o A list of historical connections
        o A list of concurrent connections
        o Amounts of bytes transferred
    The client SHOULD also be able to modify information or properties of the server on runtime, such as adding or deleting users, setting up password sniffing for at least POP3 protocol and modifying the buffer size.
    In order to maintain security, authentication with the server upon connection is required. 
    Once authenticated, the connection follows a Request/Response structure, where the client makes the requests, and the Server processes and responds.

3. Connection and Authentication

   3.1. Connection
        When a TCP-based Client wishes to establish a connection to the socks5d Server it MUST open a TCP connection to the appropriate port on the server system. The Socks5d Administration service is conventionally located on port 42069.
        
   3.2. Authentication
        Once the connection with the socks5d server has started, the client produces an authentication request:

                +----------+------+----------+---------+----------+
                |   VER    | ULEN |  UNAME   | PASSLEN |  PASS    |
                +----------+------+----------+---------+----------+
                |   X'01'  |  1   | 1 to 255 |    1    | 1 to 255 |
                +----------+------+----------+---------+----------+
        
        The Ver field contains the current version of the negotiation, which is X'01'(1 byte). 
        The ULEN field contains a 1 byte which represents the length of the UNAME field that follows.
        The UNAME field contains the username as known to the Server. Only the ASCII charset is supported.
        The PASSLEN field contains a 1 byte  which represents the length of the PASS field that follows. 
        The PASSWD field contains the password associated with the given UNAME. Only the ASCII charset is supported.

        The server verifies the supplied UNAME and PASS, and if it corresponds to a user with administrator privileges it sends the following response: 
                
                                +--------+
                                | STATUS |
                                +--------+
                                |    2   |
                                +--------+

        A STATUS field of X'C001' indicates the authentication was successful.
        A STATUS field of X'4B1D' indicates the authentication failed.
        
        If the server returns a failure status, it MUST close the connection.

        If the server returns a success status, then the session is fully established.

4. General Request and Response Structure

    Once the client is authenticated, the following messages will follow Request/Response structure.
    The client sends a Request and the server answers with a corresponding Response message.

    All messages from now on include the fields ACTION and METHOD which are 1 byte long. 

    4.1. General Request Structure

        In the Request, these fields are the ones which indicate the server the action it must perform, the other fields are just arguments of that action.

            +--------+--------+
            | ACTION | METHOD |
            +--------+--------+
            |   1    |    1   |
            +--------+--------+
        
        The values currently defined as ACTION are:

            o   X'D0'   Query - Request that does not modify the state of the server.
            o   X'BE'   Modification - Request that modifies the state of the server.
            o   X'FF' Goodbye- Request that ends the connection.

        Each ACTION has a set of methods associated with it. 

        Methods associated with the Query ACTION are meant as data retrieval methods, meaning they won't affect the state of the server. These methods do not take any parameters, they are merely getters.

        The associated METHODS for the Query ACTION (X'D0') are:

            o   X'01'   Get Total Historic Connections - returns value on success, in 4 bytes. 
            o   X'02'   Get Current Connections - returns value on success, in 4 bytes.
            o   X'03'   Get Max. Concurrent Connections - returns value on success, in 4 bytes. 
            o   X'04'   Get Total Bytes Sent - returns value on success, in 4 bytes. 
            o   X'05'   Get Total Bytes Received - returns value on success, in 4 bytes. 
            o   X'06'   Get Number of Users Connected - returns value on success, in 4 bytes. 
            o   X'07'   Get Maximum Buffer Size - returns value on success, in 4 bytes. 
          
        On the other hand, methods associated with the Modification ACTION are meant to modify the Server configuration. These methods do take parameters, whose syntax is described on Section 5. 

        The associated METHODS for the Modification ACTION (X'BE') are:

            o   X'00'   Add User - returns 0 on success in 1 byte.
            o   X'01'   Remove User - returns 0 on success in 1 byte.
            o   X'02'   Enable Password Spoofing - returns 0 on success in 1 byte.
            o   X'03'   Disable Password Spoofing - returns 0 on success in 1 byte.
            o   X'04'   Change Buffer Size - returns 0 on success in 1 byte.

        The action Goodbye should only be used with METHOD X'FF' to signal the termination of the connection.


    4.2 General Response Structure

        In the Response, the ACTION and METHOD fields MUST match the ones from their corresponding Request. The RLEN field is a byte representing the length of the response or 0 in case of error. 
            
            +--------+--------+--------+----------+
            | ACTION | METHOD |  RLEN  | RESPONSE | 
            +--------+--------+--------+----------+
            |   1    |   1    |   1    | 1 to 255 |
            +--------+--------+--------+----------+

        If an invalid ACTION or METHOD is sent to the Server, the Server MUST respond with the RLEN field set to X'00' and the first and only byte of the response field set to the error code:
            o   X'00'   Invalid Action
            o   X'01'   Invalid Method
            o   X'02'   User already registered 
            o   X'03'   User removal unsuccessful
            o   X'04'   Invalid Buffer Size

        If a valid ACTION and METHOD is sent to the Server, the Server MUST respond with the following structure:

            o The fields ACTION and METHOD are those of the orginal request.
            o The field RLEN is set to the length of the response, X'01' unless otherwise specified. 
            o The field RESPONSE is set to the response of the Server of length 4 unless otherwise specified. 

5. Modification

    For each of the associated methods of the Modification ACTION (X'BE'), the structure is defined as:

    5.1 Requests

        5.1.1 Add User

                +--------+--------+--------+----------+---------+----------+
                | ACTION | METHOD |  ULEN  |  UNAME   | PASSLEN |   PASS   |
                +--------+--------+--------+----------+---------+----------+
                |  X'BE' |  X'00' |   1    | 1 to 255 |    1    | 1 to 255 |
                +--------+--------+--------+----------+---------+----------+

                The ULEN field contains a 1 byte which represents the length of the UNAME field that follows.
                The UNAME field contains the username as known to the Server. Only the ASCII charset is supported.
                The PASSLEN field contains a 1 byte  which represents the length of the PASS field that follows. 
                The PASSWD field contains the password associated with the given UNAME. Only the ASCII charset is supported.

        5.1.2 Remove User

                +--------+--------+--------+----------+
                | ACTION | METHOD |  ULEN  |  UNAME   |
                +--------+--------+--------+----------+
                |  X'BE' |  X'01' |   1    | 1 to 255 |
                +--------+--------+--------+----------+

                The ULEN field contains a 1 byte which represents the length of the UNAME field that follows.
                The UNAME field contains the username as known to the Server. Only the ASCII charset is supported.

        5.1.3 Enable Password Spoofing

                +--------+--------+--------+
                | ACTION | METHOD |  PCOL  |
                +--------+--------+--------+
                |  X'BE' |  X'02' |   1    |
                +--------+--------+--------+

                The PCOL field contains a 1 byte which represents the protocol for which we are spoofing passwords. In this version of the procotol (X'01'), the only possible value is X'00' , representing the POP3 protocol.

        5.1.4 Disable Password Spoofing

                +--------+--------+--------+
                | ACTION | METHOD |  PCOL  |
                +--------+--------+--------+
                |  X'BE' |  X'03' |   1    |
                +--------+--------+--------+

                The PCOL field contains a 1 byte which represents the protocol for which we are spoofing passwords. In this version of the procotol (X'01'), the only possible value is X'00' , representing the POP3 protocol.

        5.1.5 Change Buffer Size

                +--------+--------+---------+
                | ACTION | METHOD |  NSIZE  |
                +--------+--------+---------+
                |  X'BE' |  X'03' |    2    |
                +--------+--------+---------+

                The NSIZE field contains 2 bytes which represents the length of the new buffer. 

        5.2 Response
        
            The Modification Requests follow the General Response Structure detailed in Section 4.2. In case of errors, RLEN field MUST be X'00'.

6. Querying

    6.1 Requests

        The Querying Requests follow the General Requests Structure detailed in Section 4.1. In case of errors, RLEN field MUST be X'00'.

    6.2 Response

        The Querying requests follow the General Response Structure detailed in Section 4.2. In case of errors, RLEN field MUST be X'00'.

